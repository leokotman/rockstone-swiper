{"version":3,"sources":["components/MessagesPage/InputMessagePage.module.css","components/MessagesPage/Message.module.css","components/MessagesPage/MessagesContainer.module.css","components/DatePage/DatePage.module.css","components/MessagesPage/Message.jsx","components/MessagesPage/MessagesContainer.jsx","components/MessagesPage/InputMessagePage.jsx","components/DatePage/DatePage.jsx","App.js","reportWebVitals.js","store.js","index.js"],"names":["module","exports","Message","props","className","style","message_animated","message","MessagesContainer","messageElements","messages","map","id","InputMessagePage","newMessageText","React","createRef","page_container","for","input_message","InputGroup","input_group","Form","Control","as","ref","onChange","current","value","updateNewMessageText","inputMessagePage","newMessage","placeholder","Button","variant","onClick","addMessage","DatePage","state","time","Date","toLocaleString","this","intervalID","setInterval","tick","clearInterval","setState","date_page","Component","App","Carousel","interval","controls","touch","keyboard","Item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","_state","getState","_rerenderPage","console","log","length","push","subscribe","observer","window","rerenderEntirePage","ReactDOM","render","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.889608bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_container\":\"InputMessagePage_page_container__33lZ_\",\"input_group\":\"InputMessagePage_input_group__1L5PS\",\"input_message\":\"InputMessagePage_input_message__2LPkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_animated\":\"Message_message_animated__DPP6x\",\"slide-bottom\":\"Message_slide-bottom__dwKP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"MessagesContainer_messages__2HYpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date_page\":\"DatePage_date_page__1D6Xn\"};","import style from \"./Message.module.css\";\n\nfunction Message(props) {\n  return (\n    <article className={style.message_animated}>\n      <div>{props.message}</div>\n    </article>\n  );\n}\n\nexport default Message;\n","import Message from \"./Message\";\nimport style from \"./MessagesContainer.module.css\";\n\nfunction MessagesContainer(props) {\n  let messageElements = props.messages.map((message) => (\n    <Message message={message.message} key={message.id} />\n  ));\n\n  return <div className={style.messages}>{messageElements}</div>;\n}\n\nexport default MessagesContainer;\n","import React from \"react\";\nimport {Button, Form, InputGroup} from \"react-bootstrap\";\n\nimport style from \"./InputMessagePage.module.css\";\nimport MessagesContainer from \"./MessagesContainer\";\n\nfunction InputMessagePage(props) {\n  let newMessageText = React.createRef();\n\n  let addMessage = () => {\n    props.addMessage();\n  };\n\n  let onChangeMessageText = () => {\n    let message = newMessageText.current.value;\n    props.updateNewMessageText(message);\n  };\n\n  return (\n    <div className={style.page_container}>\n      <h2>Swipe me</h2>\n      <label for=\"new_message\" className={style.input_message}>\n        <InputGroup className={style.input_group}>\n          <Form.Control\n            as=\"textarea\"\n            ref={newMessageText}\n            id=\"new_message\"\n            onChange={onChangeMessageText}\n            value={props.inputMessagePage.newMessage}\n            placeholder=\"New message\"\n            className=\"w-100\"\n          />\n          <Button\n            variant=\"primary\"\n            onClick={addMessage}\n            className=\"input_button\"\n          >\n            Add your message\n          </Button>\n        </InputGroup>\n      </label>\n      <MessagesContainer messages={props.inputMessagePage.messages} />\n    </div>\n  );\n}\n\nexport default InputMessagePage;\n","import style from \"./DatePage.module.css\";\nimport React from \"react\";\n\nclass DatePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date().toLocaleString(),\n    };\n  }\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n  tick() {\n    this.setState({\n      time: new Date().toLocaleString(),\n    });\n  }\n  render() {\n    return (\n      <div className={style.date_page}>\n        <h1>Current time is: </h1>\n        <span>{this.state.time}</span>\n      </div>\n    );\n  }\n}\n\nexport default DatePage;\n","import './App.css';\nimport InputMessagePage from \"./components/MessagesPage/InputMessagePage\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Carousel} from \"react-bootstrap\";\nimport DatePage from './components/DatePage/DatePage';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Carousel\n        interval={null}\n        controls={false}\n        touch={true}\n        keyboard={true}\n        className=\"h-75\"\n      >\n        <Carousel.Item>\n          <InputMessagePage\n            inputMessagePage={props.state.inputMessagePage}\n            addMessage={props.addMessage}\n            updateNewMessageText={props.updateNewMessageText}\n          />\n        </Carousel.Item>\n        <Carousel.Item>\n          <DatePage />\n        </Carousel.Item>\n      </Carousel>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let store = {\n  _state: {\n    inputMessagePage: {\n      messages: [],\n      newMessage: \"\",\n    },\n  },\n\n  getState() {\n    return this._state;\n  },\n  _rerenderPage() {\n    console.log(\"state is changed\");\n  },\n\n  addMessage() {\n    let newMessage = {\n      id: this._state.inputMessagePage.messages.length,\n      message: this._state.inputMessagePage.newMessage,\n    };\n    this._state.inputMessagePage.messages.push(newMessage);\n    this._state.inputMessagePage.newMessage = \"\";\n    this._rerenderPage(this._state);\n  },\n\n  updateNewMessageText(newMessage) {\n    this._state.inputMessagePage.newMessage = newMessage;\n    this._rerenderPage(this._state);\n  },\n  subscribe(observer) {\n    this._rerenderPage = observer;\n  },\n};\n\nwindow.store = store;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\";\n\nlet rerenderEntirePage = (state) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App\n        state={state}\n        addMessage={store.addMessage.bind(store)}\n        updateNewMessageText={store.updateNewMessageText.bind(store)}\n      />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nrerenderEntirePage(store.getState());\nstore.subscribe(rerenderEntirePage);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}